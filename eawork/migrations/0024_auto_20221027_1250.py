# Generated by Django 3.2.15 on 2022-10-27 12:50
import re
from django.db import migrations


def global_to_remote_global(apps, schema_editor):
    Alert = apps.get_model("eawork", "JobAlert")

    REMOTE_TAG = "tags_country:Remote, Global"
    JUST_GLOBAL_TAG = "tags_country:Global"

    for alert in Alert.objects.all():
        # if null, move on
        if alert.query_json is None:
            alert.save()
            continue

        has_just_global = False
        # CHECK & QUERY_JSON
        for i, sub_arr in enumerate(alert.query_json["facetFilters"]):

            if len(sub_arr) == 0 or "tags_country" not in sub_arr[0]:
                continue  # skip non tags_country subarrs

            for key_val_pair in sub_arr:
                if key_val_pair == JUST_GLOBAL_TAG:
                    has_just_global = True
                    break  # confirmed

            if has_just_global:
                # modify json

                # delete just_global
                alert.query_json["facetFilters"][i] = list(
                    filter(lambda key_val_pair: key_val_pair != JUST_GLOBAL_TAG, sub_arr)
                )

                # add remote if it doesn't have it
                if REMOTE_TAG not in sub_arr:
                    alert.query_json["facetFilters"][i].append(REMOTE_TAG)

                # we no longer need the json
                break

        # QUERY_STRING
        # is remote already in the string?
        REMOTE_IN_STRING = "Remote%2C%20Global" in alert.query_string

        # Perform
        # if yes to both, remove just_global
        if REMOTE_IN_STRING:
            alert.query_string = re.sub(
                r"[&\?]refinementList%5Btags_country%5D%5B\d%5D=Global", "", alert.query_string
            )

            # adjust index of tag countries accordingly
            matches = re.findall(r"refinementList%5Btags_country%5D%5B\d", alert.query_string)
            for match in matches:
                LAST_DIGIT = match[-1]
                NEW_DIGIT = int(LAST_DIGIT) - 1

                REPLACEMENT = match[:-1] + str(NEW_DIGIT)
                alert.query_string = re.sub(match, REPLACEMENT, alert.query_string)

            # if Global was the first refinement tag, the search no longer has a "?". Fix that.
            if alert.query_string[0] == "&":
                alert.query_string = "?" + alert.query_string[1:]

        # if no Remote, yes Just, replace Just with Remote
        else:
            alert.query_string = re.sub(
                r"(tags_country%5D%5B\d%5D=)(Global)",
                "\g<1>Remote%2C%20Global",
                alert.query_string,
            )

        alert.save()


class Migration(migrations.Migration):

    dependencies = [
        ("eawork", "0023_auto_20221026_1651"),
    ]

    operations = [
        migrations.RunPython(global_to_remote_global),
    ]
