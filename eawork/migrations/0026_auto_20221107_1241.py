# Generated by Django 3.2.15 on 2022-11-07 12:41

from django.db import migrations


def citiesAndCountriesToLocation(apps, schema_editor):

    Alert = apps.get_model("eawork", "JobAlert")

    for alert in Alert.objects.all():
        # if no query, move on
        if alert.query_json is None:
            alert.save()
            continue

        cities = []
        countries = []
        for sub_arr in alert.query_json["facetFilters"]:

            if len(sub_arr) == 0 or (
                "tags_city" not in sub_arr[0] and "tags_country" not in sub_arr[0]
            ):
                continue  # skip non location tags

            if "tags_city" in sub_arr[0]:
                cities = [sub_arr.pop(0) for item in list(sub_arr)]
            elif "tags_country" in sub_arr[0]:
                countries = [sub_arr.pop(0) for item in list(sub_arr)]

        # remove empties
        alert.query_json["facetFilters"] = list(
            filter(lambda subarr: len(subarr) != 0, alert.query_json["facetFilters"])
        )

        # combine
        location80k = cities + countries

        # rename
        location80k = list(
            map(
                lambda entry: entry.replace("tags_country", "tags_location_80k").replace(
                    "tags_city", "tags_location_80k"
                ),
                location80k,
            )
        )

        # assign
        alert.query_json["facetFilters"].append(location80k)

        alert.save()


def reverse(apps, schema_editor):
    print("reversed")


class Migration(migrations.Migration):

    dependencies = [
        ("eawork", "0025_auto_20221104_1041"),
    ]

    operations = [
        migrations.RunPython(citiesAndCountriesToLocation, reverse_code=reverse),
    ]
